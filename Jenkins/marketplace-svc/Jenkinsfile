pipeline {
    agent any

    environment {
        REGISTRY_CREDENTIALS = credentials('docker-registry-credentials')
        DOCKER_REGISTRY = "mydockerregistry.com"
        IMAGE_NAME = "marketplace-service"
        RECIPIENT_EMAIL = "team@example.com"
    }

    options {
        timestamps()
        timeout(time: 60, unit: 'MINUTES')
        retry(2)
    }

    stages {
        stage('Code Checkout') {
            steps {
                echo "Checking out code for marketplace service..."
                git url: 'https://github.com/my-org/marketplace-service.git', branch: 'main'
            }
        }

        stage('Build & Run Tests') {
            steps {
                echo "Building and running tests for marketplace service..."
                sh 'npm install'
                sh 'npm run lint'
                sh 'npm run test:integration'
            }
            post {
                always {
                    junit 'test-reports/integration-tests.xml' // Archive integration test reports
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image for marketplace service..."
                    docker.build("${DOCKER_REGISTRY}/${IMAGE_NAME}:${env.BUILD_ID}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    echo "Pushing Docker image for marketplace service..."
                    docker.withRegistry("https://${DOCKER_REGISTRY}", 'REGISTRY_CREDENTIALS') {
                        docker.image("${DOCKER_REGISTRY}/${IMAGE_NAME}:${env.BUILD_ID}").push()
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo "Deploying marketplace service to Kubernetes..."
                sh "kubectl apply -f k8s/marketplace-service-deployment.yaml --record"
            }
        }
    }

    post {
        success {
            emailext (
                subject: "Marketplace Service - Deployment Successful",
                body: "The marketplace service has been successfully deployed.",
                to: "${RECIPIENT_EMAIL}"
            )
        }
        failure {
            emailext (
                subject: "Marketplace Service - Deployment Failed",
                body: "The marketplace service deployment failed. Please check Jenkins logs.",
                to: "${RECIPIENT_EMAIL}"
            )
        }
    }
}
